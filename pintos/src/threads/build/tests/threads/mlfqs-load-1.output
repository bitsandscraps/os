<<<<<<< HEAD:pintos/src/threads/build/tests/threads/mlfqs-load-1.output
Writing command line to /tmp/hcJguBKYVO.dsk...
=======
Writing command line to /tmp/O2GNh9I0DV.dsk...
>>>>>>> a0ae42f809d041328823ccbbed10a797f2bb8f86:pintos/src/threads/build/tests/threads/mlfqs-load-1.output
warning: can't find squish-pty, so terminal input will fail
bochs -q
Kernel command line: -q -mlfqs run mlfqs-load-1
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
374 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'mlfqs-load-1':
(mlfqs-load-1) begin
(mlfqs-load-1) spinning for up to 45 seconds, please wait...
(mlfqs-load-1) FAIL: load average stayed below 0.5 for more than 45 seconds
Kernel PANIC at ../../tests/threads/tests.c:93 in fail(): test failed
<<<<<<< HEAD:pintos/src/threads/build/tests/threads/mlfqs-load-1.output
Call stack: 0xc0107794 0xc0109905 0xc010b687 0xc010985a 0xc0100535 0xc0100601 0xc0100094.
=======
Call stack: 0xc01077ac 0xc010991d 0xc010b6b3 0xc0109872 0xc0100535 0xc0100601 0xc0100094.
>>>>>>> a0ae42f809d041328823ccbbed10a797f2bb8f86:pintos/src/threads/build/tests/threads/mlfqs-load-1.output
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 4651 ticks
Thread: 0 idle ticks, 4651 kernel ticks, 0 user ticks
Console: 778 characters output
Keyboard: 0 keys pressed
Powering off...
